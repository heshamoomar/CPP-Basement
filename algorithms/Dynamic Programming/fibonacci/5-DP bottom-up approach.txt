#include<iostream>
using namespace std;
#define ll unsigned long long
// DP bottom-up approach (tabulation) O(n)
ll Fibonacci(ll N)
{
    //if N = 2, we need to store 3 fibonacci members(0,1,1)
    //if N = 3, we need to store 4 fibonacci members(0,1,1,2)
    //In general to compute Fib(N), we need N+1 size array.
    ll Fib[N + 1];

    //we know Fib[0] = 0, Fib[1]=1
    Fib[0] = 0;
    Fib[1] = 1;

    for (ll i = 2; i <= N; i++)
        Fib[i] = Fib[i - 1] + Fib[i - 2];

    //last index will have the result
    return Fib[N];
}

int main()
{
	for (int i = 0; i <= 50; i++)
		cout << Fibonacci(i) << " ";

}


